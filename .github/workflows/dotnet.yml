name: .NET

on:
  pull_request:
    branches: [ "main", "dev" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore workload
      run: dotnet workload restore ./DAPM/DAPM.AppHost/DAPM.AppHost.csproj
    - name: Restore dependencies
      run: dotnet restore ./DAPM/DAPM.sln
    - name: Build
      run: dotnet build ./DAPM/DAPM.sln --no-restore
    - name: Test
      run: dotnet test ./DAPM/DAPM.sln --no-build
  
  build-back-end-in-docker:
    timeout-minutes: 10
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Start containers
      run: docker compose -f "./DAPM/docker-compose.yml" up -d --build

  build-front-end-in-docker:
    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Start containers
      run: docker compose -f "./DAPM-Frontend/docker-compose.yml" up -d --build
  
  e2e-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore ./EndToEndTest/EndToEndTest.sln
    - name: Build
      run: dotnet build ./EndToEndTest/EndToEndTest.sln --no-restore
    - name: Test
      run: dotnet test ./EndToEndTest/EndToEndTest.sln --no-build

  stop-containers:
    runs-on: ubuntu-latest
    steps:
    - name: Stop containers
      run: docker compose -f "./DAPM/docker-compose.yml" down
    - name: Stop containers
      run: docker compose -f "./DAPM-Frontend/docker-compose.yml" down